// Code generated by protoc-gen-go. DO NOT EDIT.
// source: transaction.proto

package prototype // import "github.com/coschain/contentos-go/prototype"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Operation struct {
	// Types that are valid to be assigned to Op:
	//	*Operation_Op1
	//	*Operation_Op2
	//	*Operation_Op3
	//	*Operation_Op4
	//	*Operation_Op5
	//	*Operation_Op6
	//	*Operation_Op7
	//	*Operation_Op8
	//	*Operation_Op9
	//	*Operation_Op10
	//	*Operation_Op11
	//	*Operation_Op12
	//	*Operation_Op13
	//	*Operation_Op14
	//	*Operation_Op15
	//	*Operation_Op16
	//	*Operation_Op17
	Op                   isOperation_Op `protobuf_oneof:"op"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Operation) Reset()         { *m = Operation{} }
func (m *Operation) String() string { return proto.CompactTextString(m) }
func (*Operation) ProtoMessage()    {}
func (*Operation) Descriptor() ([]byte, []int) {
	return fileDescriptor_transaction_b213118258bc4a2c, []int{0}
}
func (m *Operation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Operation.Unmarshal(m, b)
}
func (m *Operation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Operation.Marshal(b, m, deterministic)
}
func (dst *Operation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Operation.Merge(dst, src)
}
func (m *Operation) XXX_Size() int {
	return xxx_messageInfo_Operation.Size(m)
}
func (m *Operation) XXX_DiscardUnknown() {
	xxx_messageInfo_Operation.DiscardUnknown(m)
}

var xxx_messageInfo_Operation proto.InternalMessageInfo

type isOperation_Op interface {
	isOperation_Op()
}

type Operation_Op1 struct {
	Op1 *AccountCreateOperation `protobuf:"bytes,1,opt,name=op1,proto3,oneof"`
}

type Operation_Op2 struct {
	Op2 *TransferOperation `protobuf:"bytes,2,opt,name=op2,proto3,oneof"`
}

type Operation_Op3 struct {
	Op3 *BpRegisterOperation `protobuf:"bytes,3,opt,name=op3,proto3,oneof"`
}

type Operation_Op4 struct {
	Op4 *BpUnregisterOperation `protobuf:"bytes,4,opt,name=op4,proto3,oneof"`
}

type Operation_Op5 struct {
	Op5 *BpVoteOperation `protobuf:"bytes,5,opt,name=op5,proto3,oneof"`
}

type Operation_Op6 struct {
	Op6 *PostOperation `protobuf:"bytes,6,opt,name=op6,proto3,oneof"`
}

type Operation_Op7 struct {
	Op7 *ReplyOperation `protobuf:"bytes,7,opt,name=op7,proto3,oneof"`
}

type Operation_Op8 struct {
	Op8 *FollowOperation `protobuf:"bytes,8,opt,name=op8,proto3,oneof"`
}

type Operation_Op9 struct {
	Op9 *VoteOperation `protobuf:"bytes,9,opt,name=op9,proto3,oneof"`
}

type Operation_Op10 struct {
	Op10 *TransferToVestingOperation `protobuf:"bytes,10,opt,name=op10,proto3,oneof"`
}

type Operation_Op11 struct {
	Op11 *ClaimOperation `protobuf:"bytes,11,opt,name=op11,proto3,oneof"`
}

type Operation_Op12 struct {
	Op12 *ClaimAllOperation `protobuf:"bytes,12,opt,name=op12,proto3,oneof"`
}

type Operation_Op13 struct {
	Op13 *ContractDeployOperation `protobuf:"bytes,13,opt,name=op13,proto3,oneof"`
}

type Operation_Op14 struct {
	Op14 *ContractApplyOperation `protobuf:"bytes,14,opt,name=op14,proto3,oneof"`
}

type Operation_Op15 struct {
	Op15 *StakeOperation `protobuf:"bytes,15,opt,name=op15,proto3,oneof"`
}

type Operation_Op16 struct {
	Op16 *UnStakeOperation `protobuf:"bytes,16,opt,name=op16,proto3,oneof"`
}

type Operation_Op17 struct {
	Op17 *ReportOperation `protobuf:"bytes,17,opt,name=op17,proto3,oneof"`
}

func (*Operation_Op1) isOperation_Op() {}

func (*Operation_Op2) isOperation_Op() {}

func (*Operation_Op3) isOperation_Op() {}

func (*Operation_Op4) isOperation_Op() {}

func (*Operation_Op5) isOperation_Op() {}

func (*Operation_Op6) isOperation_Op() {}

func (*Operation_Op7) isOperation_Op() {}

func (*Operation_Op8) isOperation_Op() {}

func (*Operation_Op9) isOperation_Op() {}

func (*Operation_Op10) isOperation_Op() {}

func (*Operation_Op11) isOperation_Op() {}

func (*Operation_Op12) isOperation_Op() {}

func (*Operation_Op13) isOperation_Op() {}

func (*Operation_Op14) isOperation_Op() {}

func (*Operation_Op15) isOperation_Op() {}

func (*Operation_Op16) isOperation_Op() {}

func (*Operation_Op17) isOperation_Op() {}

func (m *Operation) GetOp() isOperation_Op {
	if m != nil {
		return m.Op
	}
	return nil
}

func (m *Operation) GetOp1() *AccountCreateOperation {
	if x, ok := m.GetOp().(*Operation_Op1); ok {
		return x.Op1
	}
	return nil
}

func (m *Operation) GetOp2() *TransferOperation {
	if x, ok := m.GetOp().(*Operation_Op2); ok {
		return x.Op2
	}
	return nil
}

func (m *Operation) GetOp3() *BpRegisterOperation {
	if x, ok := m.GetOp().(*Operation_Op3); ok {
		return x.Op3
	}
	return nil
}

func (m *Operation) GetOp4() *BpUnregisterOperation {
	if x, ok := m.GetOp().(*Operation_Op4); ok {
		return x.Op4
	}
	return nil
}

func (m *Operation) GetOp5() *BpVoteOperation {
	if x, ok := m.GetOp().(*Operation_Op5); ok {
		return x.Op5
	}
	return nil
}

func (m *Operation) GetOp6() *PostOperation {
	if x, ok := m.GetOp().(*Operation_Op6); ok {
		return x.Op6
	}
	return nil
}

func (m *Operation) GetOp7() *ReplyOperation {
	if x, ok := m.GetOp().(*Operation_Op7); ok {
		return x.Op7
	}
	return nil
}

func (m *Operation) GetOp8() *FollowOperation {
	if x, ok := m.GetOp().(*Operation_Op8); ok {
		return x.Op8
	}
	return nil
}

func (m *Operation) GetOp9() *VoteOperation {
	if x, ok := m.GetOp().(*Operation_Op9); ok {
		return x.Op9
	}
	return nil
}

func (m *Operation) GetOp10() *TransferToVestingOperation {
	if x, ok := m.GetOp().(*Operation_Op10); ok {
		return x.Op10
	}
	return nil
}

func (m *Operation) GetOp11() *ClaimOperation {
	if x, ok := m.GetOp().(*Operation_Op11); ok {
		return x.Op11
	}
	return nil
}

func (m *Operation) GetOp12() *ClaimAllOperation {
	if x, ok := m.GetOp().(*Operation_Op12); ok {
		return x.Op12
	}
	return nil
}

func (m *Operation) GetOp13() *ContractDeployOperation {
	if x, ok := m.GetOp().(*Operation_Op13); ok {
		return x.Op13
	}
	return nil
}

func (m *Operation) GetOp14() *ContractApplyOperation {
	if x, ok := m.GetOp().(*Operation_Op14); ok {
		return x.Op14
	}
	return nil
}

func (m *Operation) GetOp15() *StakeOperation {
	if x, ok := m.GetOp().(*Operation_Op15); ok {
		return x.Op15
	}
	return nil
}

func (m *Operation) GetOp16() *UnStakeOperation {
	if x, ok := m.GetOp().(*Operation_Op16); ok {
		return x.Op16
	}
	return nil
}

func (m *Operation) GetOp17() *ReportOperation {
	if x, ok := m.GetOp().(*Operation_Op17); ok {
		return x.Op17
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Operation) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Operation_OneofMarshaler, _Operation_OneofUnmarshaler, _Operation_OneofSizer, []interface{}{
		(*Operation_Op1)(nil),
		(*Operation_Op2)(nil),
		(*Operation_Op3)(nil),
		(*Operation_Op4)(nil),
		(*Operation_Op5)(nil),
		(*Operation_Op6)(nil),
		(*Operation_Op7)(nil),
		(*Operation_Op8)(nil),
		(*Operation_Op9)(nil),
		(*Operation_Op10)(nil),
		(*Operation_Op11)(nil),
		(*Operation_Op12)(nil),
		(*Operation_Op13)(nil),
		(*Operation_Op14)(nil),
		(*Operation_Op15)(nil),
		(*Operation_Op16)(nil),
		(*Operation_Op17)(nil),
	}
}

func _Operation_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Operation)
	// op
	switch x := m.Op.(type) {
	case *Operation_Op1:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Op1); err != nil {
			return err
		}
	case *Operation_Op2:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Op2); err != nil {
			return err
		}
	case *Operation_Op3:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Op3); err != nil {
			return err
		}
	case *Operation_Op4:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Op4); err != nil {
			return err
		}
	case *Operation_Op5:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Op5); err != nil {
			return err
		}
	case *Operation_Op6:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Op6); err != nil {
			return err
		}
	case *Operation_Op7:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Op7); err != nil {
			return err
		}
	case *Operation_Op8:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Op8); err != nil {
			return err
		}
	case *Operation_Op9:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Op9); err != nil {
			return err
		}
	case *Operation_Op10:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Op10); err != nil {
			return err
		}
	case *Operation_Op11:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Op11); err != nil {
			return err
		}
	case *Operation_Op12:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Op12); err != nil {
			return err
		}
	case *Operation_Op13:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Op13); err != nil {
			return err
		}
	case *Operation_Op14:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Op14); err != nil {
			return err
		}
	case *Operation_Op15:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Op15); err != nil {
			return err
		}
	case *Operation_Op16:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Op16); err != nil {
			return err
		}
	case *Operation_Op17:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Op17); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Operation.Op has unexpected type %T", x)
	}
	return nil
}

func _Operation_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Operation)
	switch tag {
	case 1: // op.op1
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AccountCreateOperation)
		err := b.DecodeMessage(msg)
		m.Op = &Operation_Op1{msg}
		return true, err
	case 2: // op.op2
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TransferOperation)
		err := b.DecodeMessage(msg)
		m.Op = &Operation_Op2{msg}
		return true, err
	case 3: // op.op3
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BpRegisterOperation)
		err := b.DecodeMessage(msg)
		m.Op = &Operation_Op3{msg}
		return true, err
	case 4: // op.op4
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BpUnregisterOperation)
		err := b.DecodeMessage(msg)
		m.Op = &Operation_Op4{msg}
		return true, err
	case 5: // op.op5
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BpVoteOperation)
		err := b.DecodeMessage(msg)
		m.Op = &Operation_Op5{msg}
		return true, err
	case 6: // op.op6
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PostOperation)
		err := b.DecodeMessage(msg)
		m.Op = &Operation_Op6{msg}
		return true, err
	case 7: // op.op7
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReplyOperation)
		err := b.DecodeMessage(msg)
		m.Op = &Operation_Op7{msg}
		return true, err
	case 8: // op.op8
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FollowOperation)
		err := b.DecodeMessage(msg)
		m.Op = &Operation_Op8{msg}
		return true, err
	case 9: // op.op9
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(VoteOperation)
		err := b.DecodeMessage(msg)
		m.Op = &Operation_Op9{msg}
		return true, err
	case 10: // op.op10
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TransferToVestingOperation)
		err := b.DecodeMessage(msg)
		m.Op = &Operation_Op10{msg}
		return true, err
	case 11: // op.op11
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ClaimOperation)
		err := b.DecodeMessage(msg)
		m.Op = &Operation_Op11{msg}
		return true, err
	case 12: // op.op12
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ClaimAllOperation)
		err := b.DecodeMessage(msg)
		m.Op = &Operation_Op12{msg}
		return true, err
	case 13: // op.op13
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ContractDeployOperation)
		err := b.DecodeMessage(msg)
		m.Op = &Operation_Op13{msg}
		return true, err
	case 14: // op.op14
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ContractApplyOperation)
		err := b.DecodeMessage(msg)
		m.Op = &Operation_Op14{msg}
		return true, err
	case 15: // op.op15
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StakeOperation)
		err := b.DecodeMessage(msg)
		m.Op = &Operation_Op15{msg}
		return true, err
	case 16: // op.op16
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UnStakeOperation)
		err := b.DecodeMessage(msg)
		m.Op = &Operation_Op16{msg}
		return true, err
	case 17: // op.op17
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReportOperation)
		err := b.DecodeMessage(msg)
		m.Op = &Operation_Op17{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Operation_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Operation)
	// op
	switch x := m.Op.(type) {
	case *Operation_Op1:
		s := proto.Size(x.Op1)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Operation_Op2:
		s := proto.Size(x.Op2)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Operation_Op3:
		s := proto.Size(x.Op3)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Operation_Op4:
		s := proto.Size(x.Op4)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Operation_Op5:
		s := proto.Size(x.Op5)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Operation_Op6:
		s := proto.Size(x.Op6)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Operation_Op7:
		s := proto.Size(x.Op7)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Operation_Op8:
		s := proto.Size(x.Op8)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Operation_Op9:
		s := proto.Size(x.Op9)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Operation_Op10:
		s := proto.Size(x.Op10)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Operation_Op11:
		s := proto.Size(x.Op11)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Operation_Op12:
		s := proto.Size(x.Op12)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Operation_Op13:
		s := proto.Size(x.Op13)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Operation_Op14:
		s := proto.Size(x.Op14)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Operation_Op15:
		s := proto.Size(x.Op15)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Operation_Op16:
		s := proto.Size(x.Op16)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Operation_Op17:
		s := proto.Size(x.Op17)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// transaction
type Transaction struct {
	RefBlockNum          uint32        `protobuf:"varint,1,opt,name=ref_block_num,json=refBlockNum,proto3" json:"ref_block_num,omitempty"`
	RefBlockPrefix       uint32        `protobuf:"varint,2,opt,name=ref_block_prefix,json=refBlockPrefix,proto3" json:"ref_block_prefix,omitempty"`
	Expiration           *TimePointSec `protobuf:"bytes,3,opt,name=expiration,proto3" json:"expiration,omitempty"`
	Operations           []*Operation  `protobuf:"bytes,4,rep,name=operations,proto3" json:"operations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_transaction_b213118258bc4a2c, []int{1}
}
func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (dst *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(dst, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetRefBlockNum() uint32 {
	if m != nil {
		return m.RefBlockNum
	}
	return 0
}

func (m *Transaction) GetRefBlockPrefix() uint32 {
	if m != nil {
		return m.RefBlockPrefix
	}
	return 0
}

func (m *Transaction) GetExpiration() *TimePointSec {
	if m != nil {
		return m.Expiration
	}
	return nil
}

func (m *Transaction) GetOperations() []*Operation {
	if m != nil {
		return m.Operations
	}
	return nil
}

type SignedTransaction struct {
	Trx                  *Transaction   `protobuf:"bytes,1,opt,name=trx,proto3" json:"trx,omitempty"`
	Signature            *SignatureType `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SignedTransaction) Reset()         { *m = SignedTransaction{} }
func (m *SignedTransaction) String() string { return proto.CompactTextString(m) }
func (*SignedTransaction) ProtoMessage()    {}
func (*SignedTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_transaction_b213118258bc4a2c, []int{2}
}
func (m *SignedTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedTransaction.Unmarshal(m, b)
}
func (m *SignedTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedTransaction.Marshal(b, m, deterministic)
}
func (dst *SignedTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedTransaction.Merge(dst, src)
}
func (m *SignedTransaction) XXX_Size() int {
	return xxx_messageInfo_SignedTransaction.Size(m)
}
func (m *SignedTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_SignedTransaction proto.InternalMessageInfo

func (m *SignedTransaction) GetTrx() *Transaction {
	if m != nil {
		return m.Trx
	}
	return nil
}

func (m *SignedTransaction) GetSignature() *SignatureType {
	if m != nil {
		return m.Signature
	}
	return nil
}

type TransactionReceipt struct {
	Status               uint32   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	NetUsage             uint64   `protobuf:"varint,2,opt,name=net_usage,json=netUsage,proto3" json:"net_usage,omitempty"`
	CpuUsage             uint64   `protobuf:"varint,3,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	ErrorInfo            string   `protobuf:"bytes,4,opt,name=error_info,json=errorInfo,proto3" json:"error_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactionReceipt) Reset()         { *m = TransactionReceipt{} }
func (m *TransactionReceipt) String() string { return proto.CompactTextString(m) }
func (*TransactionReceipt) ProtoMessage()    {}
func (*TransactionReceipt) Descriptor() ([]byte, []int) {
	return fileDescriptor_transaction_b213118258bc4a2c, []int{3}
}
func (m *TransactionReceipt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionReceipt.Unmarshal(m, b)
}
func (m *TransactionReceipt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionReceipt.Marshal(b, m, deterministic)
}
func (dst *TransactionReceipt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionReceipt.Merge(dst, src)
}
func (m *TransactionReceipt) XXX_Size() int {
	return xxx_messageInfo_TransactionReceipt.Size(m)
}
func (m *TransactionReceipt) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionReceipt.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionReceipt proto.InternalMessageInfo

func (m *TransactionReceipt) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *TransactionReceipt) GetNetUsage() uint64 {
	if m != nil {
		return m.NetUsage
	}
	return 0
}

func (m *TransactionReceipt) GetCpuUsage() uint64 {
	if m != nil {
		return m.CpuUsage
	}
	return 0
}

func (m *TransactionReceipt) GetErrorInfo() string {
	if m != nil {
		return m.ErrorInfo
	}
	return ""
}

type TransactionWrapper struct {
	SigTrx               *SignedTransaction  `protobuf:"bytes,1,opt,name=sig_trx,json=sigTrx,proto3" json:"sig_trx,omitempty"`
	Receipt              *TransactionReceipt `protobuf:"bytes,2,opt,name=receipt,proto3" json:"receipt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TransactionWrapper) Reset()         { *m = TransactionWrapper{} }
func (m *TransactionWrapper) String() string { return proto.CompactTextString(m) }
func (*TransactionWrapper) ProtoMessage()    {}
func (*TransactionWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_transaction_b213118258bc4a2c, []int{4}
}
func (m *TransactionWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionWrapper.Unmarshal(m, b)
}
func (m *TransactionWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionWrapper.Marshal(b, m, deterministic)
}
func (dst *TransactionWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionWrapper.Merge(dst, src)
}
func (m *TransactionWrapper) XXX_Size() int {
	return xxx_messageInfo_TransactionWrapper.Size(m)
}
func (m *TransactionWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionWrapper proto.InternalMessageInfo

func (m *TransactionWrapper) GetSigTrx() *SignedTransaction {
	if m != nil {
		return m.SigTrx
	}
	return nil
}

func (m *TransactionWrapper) GetReceipt() *TransactionReceipt {
	if m != nil {
		return m.Receipt
	}
	return nil
}

// block
type BlockHeader struct {
	Previous              *Sha256       `protobuf:"bytes,1,opt,name=previous,proto3" json:"previous,omitempty"`
	Timestamp             *TimePointSec `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Witness               *AccountName  `protobuf:"bytes,3,opt,name=witness,proto3" json:"witness,omitempty"`
	TransactionMerkleRoot *Sha256       `protobuf:"bytes,4,opt,name=transaction_merkle_root,json=transactionMerkleRoot,proto3" json:"transaction_merkle_root,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}      `json:"-"`
	XXX_unrecognized      []byte        `json:"-"`
	XXX_sizecache         int32         `json:"-"`
}

func (m *BlockHeader) Reset()         { *m = BlockHeader{} }
func (m *BlockHeader) String() string { return proto.CompactTextString(m) }
func (*BlockHeader) ProtoMessage()    {}
func (*BlockHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_transaction_b213118258bc4a2c, []int{5}
}
func (m *BlockHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockHeader.Unmarshal(m, b)
}
func (m *BlockHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockHeader.Marshal(b, m, deterministic)
}
func (dst *BlockHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockHeader.Merge(dst, src)
}
func (m *BlockHeader) XXX_Size() int {
	return xxx_messageInfo_BlockHeader.Size(m)
}
func (m *BlockHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockHeader.DiscardUnknown(m)
}

var xxx_messageInfo_BlockHeader proto.InternalMessageInfo

func (m *BlockHeader) GetPrevious() *Sha256 {
	if m != nil {
		return m.Previous
	}
	return nil
}

func (m *BlockHeader) GetTimestamp() *TimePointSec {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *BlockHeader) GetWitness() *AccountName {
	if m != nil {
		return m.Witness
	}
	return nil
}

func (m *BlockHeader) GetTransactionMerkleRoot() *Sha256 {
	if m != nil {
		return m.TransactionMerkleRoot
	}
	return nil
}

type SignedBlockHeader struct {
	Header               *BlockHeader   `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	WitnessSignature     *SignatureType `protobuf:"bytes,2,opt,name=witness_signature,json=witnessSignature,proto3" json:"witness_signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SignedBlockHeader) Reset()         { *m = SignedBlockHeader{} }
func (m *SignedBlockHeader) String() string { return proto.CompactTextString(m) }
func (*SignedBlockHeader) ProtoMessage()    {}
func (*SignedBlockHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_transaction_b213118258bc4a2c, []int{6}
}
func (m *SignedBlockHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedBlockHeader.Unmarshal(m, b)
}
func (m *SignedBlockHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedBlockHeader.Marshal(b, m, deterministic)
}
func (dst *SignedBlockHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedBlockHeader.Merge(dst, src)
}
func (m *SignedBlockHeader) XXX_Size() int {
	return xxx_messageInfo_SignedBlockHeader.Size(m)
}
func (m *SignedBlockHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedBlockHeader.DiscardUnknown(m)
}

var xxx_messageInfo_SignedBlockHeader proto.InternalMessageInfo

func (m *SignedBlockHeader) GetHeader() *BlockHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SignedBlockHeader) GetWitnessSignature() *SignatureType {
	if m != nil {
		return m.WitnessSignature
	}
	return nil
}

type SignedBlock struct {
	SignedHeader         *SignedBlockHeader    `protobuf:"bytes,1,opt,name=signed_header,json=signedHeader,proto3" json:"signed_header,omitempty"`
	Transactions         []*TransactionWrapper `protobuf:"bytes,2,rep,name=transactions,proto3" json:"transactions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SignedBlock) Reset()         { *m = SignedBlock{} }
func (m *SignedBlock) String() string { return proto.CompactTextString(m) }
func (*SignedBlock) ProtoMessage()    {}
func (*SignedBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_transaction_b213118258bc4a2c, []int{7}
}
func (m *SignedBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedBlock.Unmarshal(m, b)
}
func (m *SignedBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedBlock.Marshal(b, m, deterministic)
}
func (dst *SignedBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedBlock.Merge(dst, src)
}
func (m *SignedBlock) XXX_Size() int {
	return xxx_messageInfo_SignedBlock.Size(m)
}
func (m *SignedBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedBlock.DiscardUnknown(m)
}

var xxx_messageInfo_SignedBlock proto.InternalMessageInfo

func (m *SignedBlock) GetSignedHeader() *SignedBlockHeader {
	if m != nil {
		return m.SignedHeader
	}
	return nil
}

func (m *SignedBlock) GetTransactions() []*TransactionWrapper {
	if m != nil {
		return m.Transactions
	}
	return nil
}

type EmptySignedBlock struct {
	SignedHeader         *SignedBlockHeader `protobuf:"bytes,1,opt,name=signed_header,json=signedHeader,proto3" json:"signed_header,omitempty"`
	TrxCount             uint32             `protobuf:"varint,2,opt,name=trx_count,json=trxCount,proto3" json:"trx_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *EmptySignedBlock) Reset()         { *m = EmptySignedBlock{} }
func (m *EmptySignedBlock) String() string { return proto.CompactTextString(m) }
func (*EmptySignedBlock) ProtoMessage()    {}
func (*EmptySignedBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_transaction_b213118258bc4a2c, []int{8}
}
func (m *EmptySignedBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptySignedBlock.Unmarshal(m, b)
}
func (m *EmptySignedBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptySignedBlock.Marshal(b, m, deterministic)
}
func (dst *EmptySignedBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptySignedBlock.Merge(dst, src)
}
func (m *EmptySignedBlock) XXX_Size() int {
	return xxx_messageInfo_EmptySignedBlock.Size(m)
}
func (m *EmptySignedBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptySignedBlock.DiscardUnknown(m)
}

var xxx_messageInfo_EmptySignedBlock proto.InternalMessageInfo

func (m *EmptySignedBlock) GetSignedHeader() *SignedBlockHeader {
	if m != nil {
		return m.SignedHeader
	}
	return nil
}

func (m *EmptySignedBlock) GetTrxCount() uint32 {
	if m != nil {
		return m.TrxCount
	}
	return 0
}

func init() {
	proto.RegisterType((*Operation)(nil), "prototype.operation")
	proto.RegisterType((*Transaction)(nil), "prototype.transaction")
	proto.RegisterType((*SignedTransaction)(nil), "prototype.signed_transaction")
	proto.RegisterType((*TransactionReceipt)(nil), "prototype.transaction_receipt")
	proto.RegisterType((*TransactionWrapper)(nil), "prototype.transaction_wrapper")
	proto.RegisterType((*BlockHeader)(nil), "prototype.block_header")
	proto.RegisterType((*SignedBlockHeader)(nil), "prototype.signed_block_header")
	proto.RegisterType((*SignedBlock)(nil), "prototype.signed_block")
	proto.RegisterType((*EmptySignedBlock)(nil), "prototype.empty_signed_block")
}

func init() { proto.RegisterFile("transaction.proto", fileDescriptor_transaction_b213118258bc4a2c) }

var fileDescriptor_transaction_b213118258bc4a2c = []byte{
	// 898 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x95, 0x4f, 0x6f, 0x23, 0x35,
	0x18, 0xc6, 0x49, 0x1b, 0x92, 0xe6, 0x4d, 0xb3, 0xdb, 0x7a, 0x61, 0xd7, 0xb4, 0xb4, 0xaa, 0x06,
	0x0e, 0x11, 0xa2, 0x49, 0xf3, 0xbf, 0xe5, 0xc0, 0xa1, 0x2b, 0xa1, 0xdd, 0x03, 0x08, 0x0d, 0x70,
	0xe1, 0x62, 0xb9, 0x53, 0x27, 0x1d, 0x35, 0xb1, 0x2d, 0xdb, 0xd3, 0xa6, 0x5f, 0x00, 0x6e, 0xdc,
	0x10, 0x5f, 0x8a, 0x8f, 0xc3, 0x07, 0x40, 0xf6, 0xb8, 0x13, 0x27, 0x93, 0x3d, 0x20, 0x71, 0x69,
	0x63, 0xfb, 0xf9, 0xcd, 0x3c, 0xef, 0xeb, 0xc7, 0x1e, 0x38, 0x34, 0x8a, 0x72, 0x4d, 0x13, 0x93,
	0x0a, 0xde, 0x91, 0x4a, 0x18, 0x81, 0x1a, 0xee, 0x9f, 0x79, 0x92, 0xec, 0x08, 0xec, 0xdf, 0x7c,
	0xfa, 0xe8, 0xa5, 0x90, 0x4c, 0xd1, 0x95, 0x2e, 0xfa, 0xb3, 0x0e, 0x8d, 0x62, 0x0e, 0x4d, 0x60,
	0x57, 0xc8, 0x1e, 0xae, 0x9c, 0x55, 0xda, 0xcd, 0xfe, 0x17, 0x9d, 0xe2, 0x19, 0x1d, 0x9a, 0x24,
	0x22, 0xe3, 0x86, 0x24, 0x8a, 0x51, 0xc3, 0x48, 0x41, 0xbc, 0xfb, 0x28, 0xb6, 0x04, 0xea, 0x59,
	0xb0, 0x8f, 0x77, 0x1c, 0x78, 0x12, 0x80, 0xce, 0xd9, 0x94, 0xa9, 0x4d, 0xa4, 0x8f, 0x86, 0x16,
	0x19, 0xe0, 0x5d, 0x87, 0x9c, 0x05, 0xc8, 0x8d, 0x24, 0x8a, 0xcd, 0x52, 0x6d, 0xca, 0xd4, 0x00,
	0x8d, 0x2d, 0x35, 0xc4, 0x55, 0x47, 0x45, 0xeb, 0x54, 0xc6, 0x3f, 0xc4, 0x0d, 0xd1, 0x85, 0xe5,
	0x46, 0xf8, 0x63, 0xc7, 0x7d, 0xbe, 0xce, 0x3d, 0x88, 0x72, 0x49, 0x23, 0x74, 0x6e, 0x89, 0x31,
	0xae, 0x39, 0xe2, 0xb3, 0x80, 0x90, 0x42, 0x9b, 0x4d, 0xf9, 0x18, 0x75, 0xac, 0x7c, 0x82, 0xeb,
	0x4e, 0x7e, 0x14, 0xc8, 0x15, 0x93, 0xf3, 0xa7, 0x4d, 0xfd, 0x04, 0x75, 0xad, 0xfe, 0x12, 0xef,
	0x39, 0xfd, 0x71, 0xa0, 0x9f, 0x8a, 0xf9, 0x5c, 0x3c, 0x6e, 0x02, 0x97, 0xb9, 0x9f, 0x2b, 0xdc,
	0x28, 0xf9, 0xd9, 0x66, 0xff, 0x0a, 0x7d, 0x0b, 0x55, 0x21, 0x7b, 0x17, 0x18, 0x9c, 0xbe, 0xbd,
	0x6d, 0x4b, 0x8c, 0x20, 0x0f, 0x4c, 0x9b, 0x94, 0xcf, 0xd6, 0x70, 0xc7, 0xa1, 0x0b, 0xc7, 0xf7,
	0x70, 0xb3, 0x54, 0x50, 0x32, 0xa7, 0xe9, 0xa2, 0x44, 0xf4, 0xd0, 0xd0, 0x11, 0x7d, 0xbc, 0xef,
	0x88, 0xd3, 0x12, 0x41, 0xe7, 0xf3, 0x12, 0xd5, 0x47, 0xdf, 0x38, 0x6a, 0x80, 0x5b, 0x8e, 0xfa,
	0x32, 0xa4, 0x04, 0x37, 0x8a, 0x26, 0x86, 0xdc, 0x32, 0x39, 0x17, 0x4f, 0x25, 0x76, 0x80, 0xae,
	0x1c, 0x3b, 0xc4, 0x2f, 0x4a, 0x79, 0x2d, 0x58, 0x2a, 0x37, 0xbb, 0xef, 0x10, 0x5f, 0xde, 0x08,
	0xbf, 0x2c, 0x95, 0xa7, 0x0d, 0xbd, 0x67, 0x25, 0x62, 0x84, 0x06, 0x8e, 0x18, 0xe3, 0x83, 0x52,
	0xc6, 0x33, 0x4e, 0xb6, 0x43, 0x63, 0xd4, 0x73, 0xd0, 0x04, 0x1f, 0x96, 0xb6, 0x59, 0x31, 0x29,
	0x94, 0x29, 0x21, 0x93, 0xeb, 0x2a, 0xec, 0x08, 0x19, 0xfd, 0x5d, 0x81, 0x66, 0x70, 0xaa, 0x51,
	0x04, 0x2d, 0xc5, 0xa6, 0xe4, 0x66, 0x2e, 0x92, 0x7b, 0xc2, 0xb3, 0x85, 0x3b, 0xa3, 0xad, 0xb8,
	0xa9, 0xd8, 0xf4, 0xda, 0xce, 0xfd, 0x90, 0x2d, 0x50, 0x1b, 0x0e, 0x56, 0x1a, 0xa9, 0xd8, 0x34,
	0x5d, 0xba, 0x13, 0xd9, 0x8a, 0x5f, 0x3c, 0xcb, 0x7e, 0x74, 0xb3, 0xe8, 0x0a, 0x80, 0x2d, 0x65,
	0x9a, 0xbf, 0xd9, 0x1f, 0xc1, 0x30, 0x52, 0x26, 0x5d, 0x30, 0x22, 0x45, 0xca, 0x0d, 0xd1, 0x2c,
	0x89, 0x03, 0x31, 0x1a, 0x02, 0x14, 0x9e, 0x35, 0xae, 0x9e, 0xed, 0xb6, 0x9b, 0xfd, 0x4f, 0x02,
	0xb4, 0x58, 0x8c, 0x03, 0x5d, 0xf4, 0x08, 0x48, 0xa7, 0x33, 0xce, 0x6e, 0x49, 0x58, 0x54, 0x1b,
	0x76, 0x8d, 0x5a, 0xfa, 0xeb, 0xe6, 0xf5, 0x66, 0x44, 0x73, 0x51, 0x6c, 0x25, 0x68, 0x02, 0x0d,
	0xcb, 0x53, 0x93, 0x29, 0xe6, 0x6f, 0x99, 0xd0, 0x6f, 0xb1, 0x46, 0xec, 0x30, 0x5e, 0x69, 0xa3,
	0xdf, 0x2a, 0xf0, 0x2a, 0x78, 0x1a, 0x51, 0x2c, 0x61, 0xa9, 0x34, 0xe8, 0x35, 0xd4, 0xb4, 0xa1,
	0x26, 0xd3, 0xbe, 0x91, 0x7e, 0x84, 0x8e, 0xa1, 0xc1, 0x99, 0x21, 0x99, 0xa6, 0xb3, 0xfc, 0x45,
	0xd5, 0x78, 0x8f, 0x33, 0xf3, 0x8b, 0x1d, 0xdb, 0xc5, 0x44, 0x66, 0x7e, 0x71, 0x37, 0x5f, 0x4c,
	0x64, 0x96, 0x2f, 0x9e, 0x00, 0x30, 0xa5, 0x84, 0x22, 0x29, 0x9f, 0x0a, 0x77, 0x41, 0x35, 0xe2,
	0x86, 0x9b, 0x79, 0xcf, 0xa7, 0x22, 0xfa, 0x7d, 0xc3, 0xc8, 0xa3, 0xa2, 0x52, 0x32, 0x85, 0xc6,
	0x50, 0xd7, 0xe9, 0x8c, 0xac, 0xfa, 0x70, 0xb2, 0x51, 0xd7, 0x7a, 0xcf, 0xe2, 0x9a, 0x4e, 0x67,
	0x3f, 0xab, 0x25, 0xba, 0x84, 0xba, 0xaf, 0xc5, 0xf7, 0xe3, 0x74, 0x7b, 0xff, 0x9e, 0x2b, 0x8e,
	0x9f, 0xe5, 0xd1, 0x3f, 0x15, 0xd8, 0xcf, 0x33, 0x72, 0xc7, 0xe8, 0x2d, 0x53, 0xe8, 0x1c, 0xf6,
	0xa4, 0x62, 0x0f, 0xa9, 0xf0, 0xdd, 0x68, 0xf6, 0x0f, 0x43, 0x0f, 0x77, 0xb4, 0x3f, 0x1a, 0xc7,
	0x85, 0xc4, 0xee, 0x85, 0xcd, 0x87, 0x36, 0x74, 0x21, 0xb7, 0xec, 0xc5, 0x46, 0x76, 0x56, 0x5a,
	0xd4, 0x83, 0xfa, 0x63, 0x6a, 0x38, 0xd3, 0xda, 0x47, 0xee, 0xcd, 0x96, 0x2f, 0x0c, 0xa7, 0x0b,
	0x16, 0x3f, 0xeb, 0xd0, 0x7b, 0x78, 0x13, 0xd6, 0xb2, 0x60, 0xea, 0x7e, 0xce, 0x88, 0x12, 0xc2,
	0xf8, 0x4f, 0xc0, 0x16, 0xa7, 0x9f, 0x06, 0xc4, 0xf7, 0x0e, 0x88, 0x85, 0x30, 0xd1, 0x1f, 0x15,
	0x78, 0xe5, 0xfb, 0xb9, 0x56, 0x7d, 0x17, 0x6a, 0xf9, 0x2f, 0x5f, 0x7b, 0x68, 0x2a, 0x14, 0xc6,
	0x5e, 0x86, 0xbe, 0x83, 0x43, 0x6f, 0x8f, 0xfc, 0x87, 0x4c, 0x1e, 0x78, 0xe6, 0xa7, 0x22, 0x9a,
	0x7f, 0x55, 0x60, 0x3f, 0x34, 0x84, 0xde, 0x42, 0xcb, 0x8f, 0xd7, 0x0c, 0x9d, 0x96, 0x03, 0xb1,
	0xe6, 0xcb, 0x3f, 0xe4, 0x5d, 0xee, 0xee, 0x1a, 0xf6, 0x83, 0xfa, 0x35, 0xde, 0x71, 0x27, 0xf4,
	0x43, 0xe1, 0xf0, 0x29, 0x8c, 0xd7, 0x98, 0xe8, 0x01, 0x10, 0x5b, 0x48, 0xf3, 0x44, 0xfe, 0x7f,
	0x7b, 0xc7, 0xd0, 0x30, 0x6a, 0x49, 0xdc, 0x5e, 0xfb, 0xcb, 0x69, 0xcf, 0xa8, 0xe5, 0x5b, 0x3b,
	0xbe, 0xfe, 0xfa, 0xd7, 0xaf, 0x66, 0xa9, 0xb9, 0xcb, 0x6e, 0x3a, 0x89, 0x58, 0x74, 0x13, 0xa1,
	0x93, 0x3b, 0x9a, 0xf2, 0xae, 0xbd, 0xcc, 0x19, 0x37, 0x42, 0x9f, 0xcf, 0x44, 0xb7, 0x78, 0xd9,
	0x4d, 0xcd, 0xfd, 0x1c, 0xfc, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x0c, 0x52, 0x2f, 0xa8, 0xfe, 0x08,
	0x00, 0x00,
}
