// Code generated by MockGen. DO NOT EDIT.
// Source: commands/utils/password_reader.go

// Package mock_utils is a generated GoMock package.
package mock_utils

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPasswordReader is a mock of PasswordReader interface
type MockPasswordReader struct {
	ctrl     *gomock.Controller
	recorder *MockPasswordReaderMockRecorder
}

// MockPasswordReaderMockRecorder is the mock recorder for MockPasswordReader
type MockPasswordReaderMockRecorder struct {
	mock *MockPasswordReader
}

// NewMockPasswordReader creates a new mock instance
func NewMockPasswordReader(ctrl *gomock.Controller) *MockPasswordReader {
	mock := &MockPasswordReader{ctrl: ctrl}
	mock.recorder = &MockPasswordReaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPasswordReader) EXPECT() *MockPasswordReaderMockRecorder {
	return m.recorder
}

// ReadPassword mocks base method
func (m *MockPasswordReader) ReadPassword(fd int) ([]byte, error) {
	ret := m.ctrl.Call(m, "ReadPassword", fd)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReadPassword indicates an expected call of ReadPassword
func (mr *MockPasswordReaderMockRecorder) ReadPassword(fd interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadPassword", reflect.TypeOf((*MockPasswordReader)(nil).ReadPassword), fd)
}
