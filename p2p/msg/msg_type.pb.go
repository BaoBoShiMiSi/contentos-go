// Code generated by protoc-gen-go. DO NOT EDIT.
// source: p2p/msg/msg_type.proto

package msg // import "github.com/coschain/contentos-go/p2p/msg"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import prototype "github.com/coschain/contentos-go/prototype"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HashMsgType int32

const (
	HashMsg_broadcast_sigblk_hash  HashMsgType = 0
	HashMsg_request_sigblk_by_hash HashMsgType = 1
	HashMsg_request_hash_ack       HashMsgType = 2
)

var HashMsgType_name = map[int32]string{
	0: "broadcast_sigblk_hash",
	1: "request_sigblk_by_hash",
	2: "request_hash_ack",
}
var HashMsgType_value = map[string]int32{
	"broadcast_sigblk_hash":  0,
	"request_sigblk_by_hash": 1,
	"request_hash_ack":       2,
}

func (x HashMsgType) String() string {
	return proto.EnumName(HashMsgType_name, int32(x))
}
func (HashMsgType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_msg_type_eec6c12d2b602b62, []int{1, 0}
}

type BroadcastSigTrx struct {
	SigTrx               *prototype.SignedTransaction `protobuf:"bytes,1,opt,name=SigTrx,proto3" json:"SigTrx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *BroadcastSigTrx) Reset()         { *m = BroadcastSigTrx{} }
func (m *BroadcastSigTrx) String() string { return proto.CompactTextString(m) }
func (*BroadcastSigTrx) ProtoMessage()    {}
func (*BroadcastSigTrx) Descriptor() ([]byte, []int) {
	return fileDescriptor_msg_type_eec6c12d2b602b62, []int{0}
}
func (m *BroadcastSigTrx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BroadcastSigTrx.Unmarshal(m, b)
}
func (m *BroadcastSigTrx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BroadcastSigTrx.Marshal(b, m, deterministic)
}
func (dst *BroadcastSigTrx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BroadcastSigTrx.Merge(dst, src)
}
func (m *BroadcastSigTrx) XXX_Size() int {
	return xxx_messageInfo_BroadcastSigTrx.Size(m)
}
func (m *BroadcastSigTrx) XXX_DiscardUnknown() {
	xxx_messageInfo_BroadcastSigTrx.DiscardUnknown(m)
}

var xxx_messageInfo_BroadcastSigTrx proto.InternalMessageInfo

func (m *BroadcastSigTrx) GetSigTrx() *prototype.SignedTransaction {
	if m != nil {
		return m.SigTrx
	}
	return nil
}

type HashMsg struct {
	Msgtype              HashMsgType         `protobuf:"varint,1,opt,name=msgtype,proto3,enum=msg.HashMsgType" json:"msgtype,omitempty"`
	Value                []*prototype.Sha256 `protobuf:"bytes,2,rep,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *HashMsg) Reset()         { *m = HashMsg{} }
func (m *HashMsg) String() string { return proto.CompactTextString(m) }
func (*HashMsg) ProtoMessage()    {}
func (*HashMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_msg_type_eec6c12d2b602b62, []int{1}
}
func (m *HashMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HashMsg.Unmarshal(m, b)
}
func (m *HashMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HashMsg.Marshal(b, m, deterministic)
}
func (dst *HashMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HashMsg.Merge(dst, src)
}
func (m *HashMsg) XXX_Size() int {
	return xxx_messageInfo_HashMsg.Size(m)
}
func (m *HashMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_HashMsg.DiscardUnknown(m)
}

var xxx_messageInfo_HashMsg proto.InternalMessageInfo

func (m *HashMsg) GetMsgtype() HashMsgType {
	if m != nil {
		return m.Msgtype
	}
	return HashMsg_broadcast_sigblk_hash
}

func (m *HashMsg) GetValue() []*prototype.Sha256 {
	if m != nil {
		return m.Value
	}
	return nil
}

type SigBlkMsg struct {
	SigBlk               *prototype.SignedBlock `protobuf:"bytes,1,opt,name=SigBlk,proto3" json:"SigBlk,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SigBlkMsg) Reset()         { *m = SigBlkMsg{} }
func (m *SigBlkMsg) String() string { return proto.CompactTextString(m) }
func (*SigBlkMsg) ProtoMessage()    {}
func (*SigBlkMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_msg_type_eec6c12d2b602b62, []int{2}
}
func (m *SigBlkMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SigBlkMsg.Unmarshal(m, b)
}
func (m *SigBlkMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SigBlkMsg.Marshal(b, m, deterministic)
}
func (dst *SigBlkMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SigBlkMsg.Merge(dst, src)
}
func (m *SigBlkMsg) XXX_Size() int {
	return xxx_messageInfo_SigBlkMsg.Size(m)
}
func (m *SigBlkMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_SigBlkMsg.DiscardUnknown(m)
}

var xxx_messageInfo_SigBlkMsg proto.InternalMessageInfo

func (m *SigBlkMsg) GetSigBlk() *prototype.SignedBlock {
	if m != nil {
		return m.SigBlk
	}
	return nil
}

type ReqHashMsg struct {
	HeadBlockId          []byte   `protobuf:"bytes,1,opt,name=head_block_id,json=headBlockId,proto3" json:"head_block_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqHashMsg) Reset()         { *m = ReqHashMsg{} }
func (m *ReqHashMsg) String() string { return proto.CompactTextString(m) }
func (*ReqHashMsg) ProtoMessage()    {}
func (*ReqHashMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_msg_type_eec6c12d2b602b62, []int{3}
}
func (m *ReqHashMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqHashMsg.Unmarshal(m, b)
}
func (m *ReqHashMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqHashMsg.Marshal(b, m, deterministic)
}
func (dst *ReqHashMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqHashMsg.Merge(dst, src)
}
func (m *ReqHashMsg) XXX_Size() int {
	return xxx_messageInfo_ReqHashMsg.Size(m)
}
func (m *ReqHashMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqHashMsg.DiscardUnknown(m)
}

var xxx_messageInfo_ReqHashMsg proto.InternalMessageInfo

func (m *ReqHashMsg) GetHeadBlockId() []byte {
	if m != nil {
		return m.HeadBlockId
	}
	return nil
}

func init() {
	proto.RegisterType((*BroadcastSigTrx)(nil), "msg.broadcast_sig_trx")
	proto.RegisterType((*HashMsg)(nil), "msg.hash_msg")
	proto.RegisterType((*SigBlkMsg)(nil), "msg.sig_blk_msg")
	proto.RegisterType((*ReqHashMsg)(nil), "msg.req_hash_msg")
	proto.RegisterEnum("msg.HashMsgType", HashMsgType_name, HashMsgType_value)
}

func init() { proto.RegisterFile("p2p/msg/msg_type.proto", fileDescriptor_msg_type_eec6c12d2b602b62) }

var fileDescriptor_msg_type_eec6c12d2b602b62 = []byte{
	// 335 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0xcf, 0x4f, 0xfa, 0x30,
	0x18, 0xc6, 0xbf, 0x83, 0xaf, 0x68, 0x3a, 0x34, 0xd0, 0x20, 0x22, 0xc6, 0x84, 0xec, 0x22, 0x31,
	0xda, 0x25, 0x33, 0x78, 0xf4, 0xc0, 0x4d, 0x8f, 0xc3, 0x93, 0x97, 0xa6, 0xeb, 0x9a, 0xae, 0xd9,
	0x8f, 0x8e, 0xb6, 0x18, 0xf8, 0xc7, 0xfc, 0xfb, 0x4c, 0xcb, 0xc0, 0x19, 0x0f, 0x4b, 0x96, 0xf7,
	0xf3, 0x3c, 0xcf, 0xfb, 0x3e, 0x29, 0x18, 0xd7, 0x51, 0x1d, 0x96, 0x9a, 0xdb, 0x0f, 0x9b, 0x5d,
	0xcd, 0x50, 0xad, 0xa4, 0x91, 0xb0, 0x5b, 0x6a, 0x3e, 0xbd, 0x71, 0xff, 0x76, 0x1a, 0x1a, 0x45,
	0x2a, 0x4d, 0xa8, 0x11, 0xb2, 0xda, 0x2b, 0xa6, 0xa3, 0x16, 0x3c, 0xfa, 0x82, 0x37, 0x30, 0x4c,
	0x94, 0x24, 0x29, 0x25, 0xda, 0x60, 0x2d, 0x38, 0x36, 0x6a, 0x0b, 0x17, 0xa0, 0xb7, 0x12, 0xfc,
	0x5d, 0x6d, 0x27, 0xde, 0xcc, 0x9b, 0xfb, 0xd1, 0x2d, 0x3a, 0x7a, 0x91, 0x16, 0xbc, 0x62, 0x29,
	0x6e, 0xe5, 0xc7, 0x8d, 0x38, 0xf8, 0xf2, 0xc0, 0x59, 0x46, 0x74, 0x86, 0x4b, 0xcd, 0xe1, 0x03,
	0x38, 0x2d, 0x35, 0xb7, 0x16, 0x17, 0x72, 0x11, 0x41, 0x54, 0x6a, 0x8e, 0x0e, 0x1c, 0x59, 0x12,
	0x1f, 0x24, 0xf0, 0x0e, 0x9c, 0x7c, 0x92, 0x62, 0xc3, 0x26, 0x9d, 0x59, 0x77, 0xee, 0x47, 0xc3,
	0xf6, 0xc2, 0x8c, 0x44, 0x8b, 0xe7, 0x78, 0xcf, 0x83, 0x15, 0xf8, 0xef, 0x0c, 0xd7, 0xe0, 0xf2,
	0xd7, 0xdd, 0x49, 0x91, 0x63, 0x9b, 0x3d, 0xf8, 0x07, 0xa7, 0x60, 0xac, 0xd8, 0x7a, 0xc3, 0x7e,
	0x40, 0xb2, 0xdb, 0x33, 0x0f, 0x8e, 0xc0, 0xe0, 0xc0, 0xdc, 0x25, 0x84, 0xe6, 0x83, 0x4e, 0xf0,
	0x02, 0x7c, 0x5b, 0xdd, 0x4a, 0xed, 0xe9, 0xa1, 0xab, 0xbf, 0x2c, 0xf2, 0xa6, 0xfe, 0xd5, 0xdf,
	0xfa, 0x49, 0x21, 0x69, 0x1e, 0x37, 0xb2, 0x20, 0x02, 0x7d, 0xc5, 0xd6, 0xf8, 0xd8, 0x3d, 0x00,
	0xe7, 0x19, 0x23, 0x8d, 0x0a, 0x8b, 0xd4, 0xe5, 0xf4, 0x63, 0xdf, 0x0e, 0x97, 0x76, 0xf6, 0x9a,
	0x2e, 0xef, 0x3f, 0xe6, 0x5c, 0x98, 0x6c, 0x93, 0x20, 0x2a, 0xcb, 0x90, 0x4a, 0x4d, 0x33, 0x22,
	0xaa, 0x90, 0xca, 0xca, 0xb0, 0xca, 0x48, 0xfd, 0xc8, 0x65, 0xd8, 0xbc, 0x75, 0xd2, 0x73, 0xfb,
	0x9f, 0xbe, 0x03, 0x00, 0x00, 0xff, 0xff, 0x7a, 0x1b, 0x6c, 0x74, 0xfd, 0x01, 0x00, 0x00,
}
